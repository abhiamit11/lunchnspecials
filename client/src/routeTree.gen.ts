/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const TermsConditionsLazyImport = createFileRoute('/terms-conditions')()
const PrivacyPolicyLazyImport = createFileRoute('/privacy-policy')()
const CookiesPolicyLazyImport = createFileRoute('/cookies-policy')()
const AboutUsLazyImport = createFileRoute('/about-us')()

// Create/Update Routes

const TermsConditionsLazyRoute = TermsConditionsLazyImport.update({
  id: '/terms-conditions',
  path: '/terms-conditions',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/terms-conditions.lazy').then((d) => d.Route),
)

const PrivacyPolicyLazyRoute = PrivacyPolicyLazyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/privacy-policy.lazy').then((d) => d.Route),
)

const CookiesPolicyLazyRoute = CookiesPolicyLazyImport.update({
  id: '/cookies-policy',
  path: '/cookies-policy',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/cookies-policy.lazy').then((d) => d.Route),
)

const AboutUsLazyRoute = AboutUsLazyImport.update({
  id: '/about-us',
  path: '/about-us',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about-us.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about-us': {
      id: '/about-us'
      path: '/about-us'
      fullPath: '/about-us'
      preLoaderRoute: typeof AboutUsLazyImport
      parentRoute: typeof rootRoute
    }
    '/cookies-policy': {
      id: '/cookies-policy'
      path: '/cookies-policy'
      fullPath: '/cookies-policy'
      preLoaderRoute: typeof CookiesPolicyLazyImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyLazyImport
      parentRoute: typeof rootRoute
    }
    '/terms-conditions': {
      id: '/terms-conditions'
      path: '/terms-conditions'
      fullPath: '/terms-conditions'
      preLoaderRoute: typeof TermsConditionsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about-us': typeof AboutUsLazyRoute
  '/cookies-policy': typeof CookiesPolicyLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/terms-conditions': typeof TermsConditionsLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about-us': typeof AboutUsLazyRoute
  '/cookies-policy': typeof CookiesPolicyLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/terms-conditions': typeof TermsConditionsLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about-us': typeof AboutUsLazyRoute
  '/cookies-policy': typeof CookiesPolicyLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/terms-conditions': typeof TermsConditionsLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about-us'
    | '/cookies-policy'
    | '/privacy-policy'
    | '/terms-conditions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about-us'
    | '/cookies-policy'
    | '/privacy-policy'
    | '/terms-conditions'
  id:
    | '__root__'
    | '/'
    | '/about-us'
    | '/cookies-policy'
    | '/privacy-policy'
    | '/terms-conditions'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutUsLazyRoute: typeof AboutUsLazyRoute
  CookiesPolicyLazyRoute: typeof CookiesPolicyLazyRoute
  PrivacyPolicyLazyRoute: typeof PrivacyPolicyLazyRoute
  TermsConditionsLazyRoute: typeof TermsConditionsLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutUsLazyRoute: AboutUsLazyRoute,
  CookiesPolicyLazyRoute: CookiesPolicyLazyRoute,
  PrivacyPolicyLazyRoute: PrivacyPolicyLazyRoute,
  TermsConditionsLazyRoute: TermsConditionsLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about-us",
        "/cookies-policy",
        "/privacy-policy",
        "/terms-conditions"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about-us": {
      "filePath": "about-us.lazy.tsx"
    },
    "/cookies-policy": {
      "filePath": "cookies-policy.lazy.tsx"
    },
    "/privacy-policy": {
      "filePath": "privacy-policy.lazy.tsx"
    },
    "/terms-conditions": {
      "filePath": "terms-conditions.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
