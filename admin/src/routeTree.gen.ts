/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as AuthImport } from './routes/_auth'

// Create Virtual Routes

const DashboardIndexLazyImport = createFileRoute('/_dashboard/')()
const DashboardSettingsLazyImport = createFileRoute('/_dashboard/settings')()
const AuthLoginLazyImport = createFileRoute('/_auth/login')()
const DashboardRestaurantsIndexLazyImport = createFileRoute(
  '/_dashboard/restaurants/',
)()
const DashboardLegalPagesIndexLazyImport = createFileRoute(
  '/_dashboard/legal-pages/',
)()
const DashboardRestaurantsImportLazyImport = createFileRoute(
  '/_dashboard/restaurants/import',
)()
const DashboardRestaurantsDuplicatesLazyImport = createFileRoute(
  '/_dashboard/restaurants/duplicates',
)()
const DashboardRestaurantsAddLazyImport = createFileRoute(
  '/_dashboard/restaurants/add',
)()
const DashboardLegalPagesTermsConditionsLazyImport = createFileRoute(
  '/_dashboard/legal-pages/terms-conditions',
)()
const DashboardLegalPagesPrivacyPolicyLazyImport = createFileRoute(
  '/_dashboard/legal-pages/privacy-policy',
)()
const DashboardLegalPagesCookiesPolicyLazyImport = createFileRoute(
  '/_dashboard/legal-pages/cookies-policy',
)()
const DashboardLegalPagesAboutUsLazyImport = createFileRoute(
  '/_dashboard/legal-pages/about-us',
)()
const DashboardRestaurantsEditIdLazyImport = createFileRoute(
  '/_dashboard/restaurants/edit/$id',
)()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any).lazy(() =>
  import('./routes/_dashboard/index.lazy').then((d) => d.Route),
)

const DashboardSettingsLazyRoute = DashboardSettingsLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any).lazy(() =>
  import('./routes/_dashboard/settings.lazy').then((d) => d.Route),
)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/login.lazy').then((d) => d.Route))

const DashboardRestaurantsIndexLazyRoute =
  DashboardRestaurantsIndexLazyImport.update({
    id: '/restaurants/',
    path: '/restaurants/',
    getParentRoute: () => DashboardRoute,
  } as any).lazy(() =>
    import('./routes/_dashboard/restaurants/index.lazy').then((d) => d.Route),
  )

const DashboardLegalPagesIndexLazyRoute =
  DashboardLegalPagesIndexLazyImport.update({
    id: '/legal-pages/',
    path: '/legal-pages/',
    getParentRoute: () => DashboardRoute,
  } as any).lazy(() =>
    import('./routes/_dashboard/legal-pages/index.lazy').then((d) => d.Route),
  )

const DashboardRestaurantsImportLazyRoute =
  DashboardRestaurantsImportLazyImport.update({
    id: '/restaurants/import',
    path: '/restaurants/import',
    getParentRoute: () => DashboardRoute,
  } as any).lazy(() =>
    import('./routes/_dashboard/restaurants/import.lazy').then((d) => d.Route),
  )

const DashboardRestaurantsDuplicatesLazyRoute =
  DashboardRestaurantsDuplicatesLazyImport.update({
    id: '/restaurants/duplicates',
    path: '/restaurants/duplicates',
    getParentRoute: () => DashboardRoute,
  } as any).lazy(() =>
    import('./routes/_dashboard/restaurants/duplicates.lazy').then(
      (d) => d.Route,
    ),
  )

const DashboardRestaurantsAddLazyRoute =
  DashboardRestaurantsAddLazyImport.update({
    id: '/restaurants/add',
    path: '/restaurants/add',
    getParentRoute: () => DashboardRoute,
  } as any).lazy(() =>
    import('./routes/_dashboard/restaurants/add.lazy').then((d) => d.Route),
  )

const DashboardLegalPagesTermsConditionsLazyRoute =
  DashboardLegalPagesTermsConditionsLazyImport.update({
    id: '/legal-pages/terms-conditions',
    path: '/legal-pages/terms-conditions',
    getParentRoute: () => DashboardRoute,
  } as any).lazy(() =>
    import('./routes/_dashboard/legal-pages/terms-conditions.lazy').then(
      (d) => d.Route,
    ),
  )

const DashboardLegalPagesPrivacyPolicyLazyRoute =
  DashboardLegalPagesPrivacyPolicyLazyImport.update({
    id: '/legal-pages/privacy-policy',
    path: '/legal-pages/privacy-policy',
    getParentRoute: () => DashboardRoute,
  } as any).lazy(() =>
    import('./routes/_dashboard/legal-pages/privacy-policy.lazy').then(
      (d) => d.Route,
    ),
  )

const DashboardLegalPagesCookiesPolicyLazyRoute =
  DashboardLegalPagesCookiesPolicyLazyImport.update({
    id: '/legal-pages/cookies-policy',
    path: '/legal-pages/cookies-policy',
    getParentRoute: () => DashboardRoute,
  } as any).lazy(() =>
    import('./routes/_dashboard/legal-pages/cookies-policy.lazy').then(
      (d) => d.Route,
    ),
  )

const DashboardLegalPagesAboutUsLazyRoute =
  DashboardLegalPagesAboutUsLazyImport.update({
    id: '/legal-pages/about-us',
    path: '/legal-pages/about-us',
    getParentRoute: () => DashboardRoute,
  } as any).lazy(() =>
    import('./routes/_dashboard/legal-pages/about-us.lazy').then(
      (d) => d.Route,
    ),
  )

const DashboardRestaurantsEditIdLazyRoute =
  DashboardRestaurantsEditIdLazyImport.update({
    id: '/restaurants/edit/$id',
    path: '/restaurants/edit/$id',
    getParentRoute: () => DashboardRoute,
  } as any).lazy(() =>
    import('./routes/_dashboard/restaurants/edit.$id.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof AuthImport
    }
    '/_dashboard/settings': {
      id: '/_dashboard/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DashboardSettingsLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/legal-pages/about-us': {
      id: '/_dashboard/legal-pages/about-us'
      path: '/legal-pages/about-us'
      fullPath: '/legal-pages/about-us'
      preLoaderRoute: typeof DashboardLegalPagesAboutUsLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/legal-pages/cookies-policy': {
      id: '/_dashboard/legal-pages/cookies-policy'
      path: '/legal-pages/cookies-policy'
      fullPath: '/legal-pages/cookies-policy'
      preLoaderRoute: typeof DashboardLegalPagesCookiesPolicyLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/legal-pages/privacy-policy': {
      id: '/_dashboard/legal-pages/privacy-policy'
      path: '/legal-pages/privacy-policy'
      fullPath: '/legal-pages/privacy-policy'
      preLoaderRoute: typeof DashboardLegalPagesPrivacyPolicyLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/legal-pages/terms-conditions': {
      id: '/_dashboard/legal-pages/terms-conditions'
      path: '/legal-pages/terms-conditions'
      fullPath: '/legal-pages/terms-conditions'
      preLoaderRoute: typeof DashboardLegalPagesTermsConditionsLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/restaurants/add': {
      id: '/_dashboard/restaurants/add'
      path: '/restaurants/add'
      fullPath: '/restaurants/add'
      preLoaderRoute: typeof DashboardRestaurantsAddLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/restaurants/duplicates': {
      id: '/_dashboard/restaurants/duplicates'
      path: '/restaurants/duplicates'
      fullPath: '/restaurants/duplicates'
      preLoaderRoute: typeof DashboardRestaurantsDuplicatesLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/restaurants/import': {
      id: '/_dashboard/restaurants/import'
      path: '/restaurants/import'
      fullPath: '/restaurants/import'
      preLoaderRoute: typeof DashboardRestaurantsImportLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/legal-pages/': {
      id: '/_dashboard/legal-pages/'
      path: '/legal-pages'
      fullPath: '/legal-pages'
      preLoaderRoute: typeof DashboardLegalPagesIndexLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/restaurants/': {
      id: '/_dashboard/restaurants/'
      path: '/restaurants'
      fullPath: '/restaurants'
      preLoaderRoute: typeof DashboardRestaurantsIndexLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/restaurants/edit/$id': {
      id: '/_dashboard/restaurants/edit/$id'
      path: '/restaurants/edit/$id'
      fullPath: '/restaurants/edit/$id'
      preLoaderRoute: typeof DashboardRestaurantsEditIdLazyImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginLazyRoute: AuthLoginLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardRouteChildren {
  DashboardSettingsLazyRoute: typeof DashboardSettingsLazyRoute
  DashboardIndexLazyRoute: typeof DashboardIndexLazyRoute
  DashboardLegalPagesAboutUsLazyRoute: typeof DashboardLegalPagesAboutUsLazyRoute
  DashboardLegalPagesCookiesPolicyLazyRoute: typeof DashboardLegalPagesCookiesPolicyLazyRoute
  DashboardLegalPagesPrivacyPolicyLazyRoute: typeof DashboardLegalPagesPrivacyPolicyLazyRoute
  DashboardLegalPagesTermsConditionsLazyRoute: typeof DashboardLegalPagesTermsConditionsLazyRoute
  DashboardRestaurantsAddLazyRoute: typeof DashboardRestaurantsAddLazyRoute
  DashboardRestaurantsDuplicatesLazyRoute: typeof DashboardRestaurantsDuplicatesLazyRoute
  DashboardRestaurantsImportLazyRoute: typeof DashboardRestaurantsImportLazyRoute
  DashboardLegalPagesIndexLazyRoute: typeof DashboardLegalPagesIndexLazyRoute
  DashboardRestaurantsIndexLazyRoute: typeof DashboardRestaurantsIndexLazyRoute
  DashboardRestaurantsEditIdLazyRoute: typeof DashboardRestaurantsEditIdLazyRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardSettingsLazyRoute: DashboardSettingsLazyRoute,
  DashboardIndexLazyRoute: DashboardIndexLazyRoute,
  DashboardLegalPagesAboutUsLazyRoute: DashboardLegalPagesAboutUsLazyRoute,
  DashboardLegalPagesCookiesPolicyLazyRoute:
    DashboardLegalPagesCookiesPolicyLazyRoute,
  DashboardLegalPagesPrivacyPolicyLazyRoute:
    DashboardLegalPagesPrivacyPolicyLazyRoute,
  DashboardLegalPagesTermsConditionsLazyRoute:
    DashboardLegalPagesTermsConditionsLazyRoute,
  DashboardRestaurantsAddLazyRoute: DashboardRestaurantsAddLazyRoute,
  DashboardRestaurantsDuplicatesLazyRoute:
    DashboardRestaurantsDuplicatesLazyRoute,
  DashboardRestaurantsImportLazyRoute: DashboardRestaurantsImportLazyRoute,
  DashboardLegalPagesIndexLazyRoute: DashboardLegalPagesIndexLazyRoute,
  DashboardRestaurantsIndexLazyRoute: DashboardRestaurantsIndexLazyRoute,
  DashboardRestaurantsEditIdLazyRoute: DashboardRestaurantsEditIdLazyRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof DashboardRouteWithChildren
  '/login': typeof AuthLoginLazyRoute
  '/settings': typeof DashboardSettingsLazyRoute
  '/': typeof DashboardIndexLazyRoute
  '/legal-pages/about-us': typeof DashboardLegalPagesAboutUsLazyRoute
  '/legal-pages/cookies-policy': typeof DashboardLegalPagesCookiesPolicyLazyRoute
  '/legal-pages/privacy-policy': typeof DashboardLegalPagesPrivacyPolicyLazyRoute
  '/legal-pages/terms-conditions': typeof DashboardLegalPagesTermsConditionsLazyRoute
  '/restaurants/add': typeof DashboardRestaurantsAddLazyRoute
  '/restaurants/duplicates': typeof DashboardRestaurantsDuplicatesLazyRoute
  '/restaurants/import': typeof DashboardRestaurantsImportLazyRoute
  '/legal-pages': typeof DashboardLegalPagesIndexLazyRoute
  '/restaurants': typeof DashboardRestaurantsIndexLazyRoute
  '/restaurants/edit/$id': typeof DashboardRestaurantsEditIdLazyRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/login': typeof AuthLoginLazyRoute
  '/settings': typeof DashboardSettingsLazyRoute
  '/': typeof DashboardIndexLazyRoute
  '/legal-pages/about-us': typeof DashboardLegalPagesAboutUsLazyRoute
  '/legal-pages/cookies-policy': typeof DashboardLegalPagesCookiesPolicyLazyRoute
  '/legal-pages/privacy-policy': typeof DashboardLegalPagesPrivacyPolicyLazyRoute
  '/legal-pages/terms-conditions': typeof DashboardLegalPagesTermsConditionsLazyRoute
  '/restaurants/add': typeof DashboardRestaurantsAddLazyRoute
  '/restaurants/duplicates': typeof DashboardRestaurantsDuplicatesLazyRoute
  '/restaurants/import': typeof DashboardRestaurantsImportLazyRoute
  '/legal-pages': typeof DashboardLegalPagesIndexLazyRoute
  '/restaurants': typeof DashboardRestaurantsIndexLazyRoute
  '/restaurants/edit/$id': typeof DashboardRestaurantsEditIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_auth/login': typeof AuthLoginLazyRoute
  '/_dashboard/settings': typeof DashboardSettingsLazyRoute
  '/_dashboard/': typeof DashboardIndexLazyRoute
  '/_dashboard/legal-pages/about-us': typeof DashboardLegalPagesAboutUsLazyRoute
  '/_dashboard/legal-pages/cookies-policy': typeof DashboardLegalPagesCookiesPolicyLazyRoute
  '/_dashboard/legal-pages/privacy-policy': typeof DashboardLegalPagesPrivacyPolicyLazyRoute
  '/_dashboard/legal-pages/terms-conditions': typeof DashboardLegalPagesTermsConditionsLazyRoute
  '/_dashboard/restaurants/add': typeof DashboardRestaurantsAddLazyRoute
  '/_dashboard/restaurants/duplicates': typeof DashboardRestaurantsDuplicatesLazyRoute
  '/_dashboard/restaurants/import': typeof DashboardRestaurantsImportLazyRoute
  '/_dashboard/legal-pages/': typeof DashboardLegalPagesIndexLazyRoute
  '/_dashboard/restaurants/': typeof DashboardRestaurantsIndexLazyRoute
  '/_dashboard/restaurants/edit/$id': typeof DashboardRestaurantsEditIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/settings'
    | '/'
    | '/legal-pages/about-us'
    | '/legal-pages/cookies-policy'
    | '/legal-pages/privacy-policy'
    | '/legal-pages/terms-conditions'
    | '/restaurants/add'
    | '/restaurants/duplicates'
    | '/restaurants/import'
    | '/legal-pages'
    | '/restaurants'
    | '/restaurants/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/settings'
    | '/'
    | '/legal-pages/about-us'
    | '/legal-pages/cookies-policy'
    | '/legal-pages/privacy-policy'
    | '/legal-pages/terms-conditions'
    | '/restaurants/add'
    | '/restaurants/duplicates'
    | '/restaurants/import'
    | '/legal-pages'
    | '/restaurants'
    | '/restaurants/edit/$id'
  id:
    | '__root__'
    | '/_auth'
    | '/_dashboard'
    | '/_auth/login'
    | '/_dashboard/settings'
    | '/_dashboard/'
    | '/_dashboard/legal-pages/about-us'
    | '/_dashboard/legal-pages/cookies-policy'
    | '/_dashboard/legal-pages/privacy-policy'
    | '/_dashboard/legal-pages/terms-conditions'
    | '/_dashboard/restaurants/add'
    | '/_dashboard/restaurants/duplicates'
    | '/_dashboard/restaurants/import'
    | '/_dashboard/legal-pages/'
    | '/_dashboard/restaurants/'
    | '/_dashboard/restaurants/edit/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_dashboard"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/settings",
        "/_dashboard/",
        "/_dashboard/legal-pages/about-us",
        "/_dashboard/legal-pages/cookies-policy",
        "/_dashboard/legal-pages/privacy-policy",
        "/_dashboard/legal-pages/terms-conditions",
        "/_dashboard/restaurants/add",
        "/_dashboard/restaurants/duplicates",
        "/_dashboard/restaurants/import",
        "/_dashboard/legal-pages/",
        "/_dashboard/restaurants/",
        "/_dashboard/restaurants/edit/$id"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.lazy.tsx",
      "parent": "/_auth"
    },
    "/_dashboard/settings": {
      "filePath": "_dashboard/settings.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/": {
      "filePath": "_dashboard/index.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/legal-pages/about-us": {
      "filePath": "_dashboard/legal-pages/about-us.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/legal-pages/cookies-policy": {
      "filePath": "_dashboard/legal-pages/cookies-policy.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/legal-pages/privacy-policy": {
      "filePath": "_dashboard/legal-pages/privacy-policy.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/legal-pages/terms-conditions": {
      "filePath": "_dashboard/legal-pages/terms-conditions.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/restaurants/add": {
      "filePath": "_dashboard/restaurants/add.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/restaurants/duplicates": {
      "filePath": "_dashboard/restaurants/duplicates.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/restaurants/import": {
      "filePath": "_dashboard/restaurants/import.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/legal-pages/": {
      "filePath": "_dashboard/legal-pages/index.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/restaurants/": {
      "filePath": "_dashboard/restaurants/index.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/restaurants/edit/$id": {
      "filePath": "_dashboard/restaurants/edit.$id.lazy.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
